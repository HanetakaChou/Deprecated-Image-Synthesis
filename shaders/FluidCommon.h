// Copyright (c) 2011 NVIDIA Corporation. All rights reserved.
//
// TO  THE MAXIMUM  EXTENT PERMITTED  BY APPLICABLE  LAW, THIS SOFTWARE  IS PROVIDED
// *AS IS*  AND NVIDIA AND  ITS SUPPLIERS DISCLAIM  ALL WARRANTIES,  EITHER  EXPRESS
// OR IMPLIED, INCLUDING, BUT NOT LIMITED  TO, NONINFRINGEMENT,IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO EVENT SHALL  NVIDIA
// OR ITS SUPPLIERS BE  LIABLE  FOR  ANY  DIRECT, SPECIAL,  INCIDENTAL,  INDIRECT,  OR
// CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION,  DAMAGES FOR LOSS
// OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION, OR ANY
// OTHER PECUNIARY LOSS) ARISING OUT OF THE  USE OF OR INABILITY  TO USE THIS SOFTWARE,
// EVEN IF NVIDIA HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
//
// Please direct any bugs or questions to SDKFeedback@nvidia.com

#ifndef FLUIDCOMMON_FXH
#define FLUIDCOMMON_FXH

// Definitions common to C++ and HLSL code
//========================================

// These are the values used when filling the obstacle textures
#define OBSTACLE_EXTERIOR 1.0f
#define OBSTACLE_BOUNDARY 128.0f / 255.0f
#define OBSTACLE_INTERIOR 0.0f

#define SLOT_TEXTURE_PRESSURE 0
#define SLOT_TEXTURE_VELOCITY 1
#define SLOT_TEXTURE_VORTICITY 2
#define SLOT_TEXTURE_DIVERGENCE 3
#define SLOT_TEXTURE_PHI 4
#define SLOT_TEXTURE_PHI_HAT 5
#define SLOT_TEXTURE_PHI_NEXT 6
#define SLOT_TEXTURE_PHI_LEVELSET 7
#define SLOT_TEXTURE_OBSTACLES 8 
#define SLOT_TEXTURE_OBSTVELOCITY 9 

#if defined(__STDC__) || defined(__cplusplus)

enum FLUID_TYPE
{
    FT_SMOKE = 0,
    FT_FIRE = 1,
    FT_LIQUID = 2
};

#elif defined(HLSL_VERSION) || defined(__HLSL_VERSION)

#define FT_SMOKE 0
#define FT_FIRE 1
#define FT_LIQUID 2

#define TEXREG(n) register(t##n)

#else
#error Unknown Compiler
#endif

#endif
